var pivot;(()=>{"use strict";var e,t={};e=t,Object.defineProperty(e,"__esModule",{value:!0}),e.count=e.average=e.sum=e.select=e.filter=e.map=e.slice=e.cube=e.dimension=e.distinct=void 0,e.distinct=(e,t,l=(e=>e[t]))=>{const n=new Set;for(let t=0;t<e.length;++t)n.add(l(e[t],t,e));return[...n]},e.dimension=(e,t,l=(e=>[{key:t,value:e,predicate:l=>l[t]===e}]))=>{const n=[];for(let t=0;t<e.length;++t)n.push(l(e[t],t,e));return n},e.cube=(t,l)=>(0,e.slice)(l.y)([...t]).map((0,e.slice)(l.x)),e.slice=e=>t=>e.map((e=>{let l=[],n=0,r=0;for(;n<t.length;)e.every((e=>e.predicate(t[n],n,t)))?l.push(t[n++]):t[r++]=t[n++];return t.length=r,l})),e.map=(e,t)=>e.map((e=>e.map(t))),e.filter=e=>t=>t.filter(e),e.select=e=>t=>t.map(e),e.sum=e=>t=>t?t.reduce(((t,l)=>t+e(l)),0):null,e.average=t=>l=>l?(0,e.sum)(t)(l)/(0,e.count)(l):null,e.count=e=>e.length||null,pivot=t})();